{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/PageTitle/PageTitle.module.css","components/Section/Section.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/PageTitle/PageTitle.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","container","defaultProps","Statistics","good","neutral","bad","total","positivePercentage","statistics","divider","FeedbackOptions","options","onLeaveFeedback","optionsContainer","map","option","label","toUpperCase","slice","name","onClick","Notification","message","PageTitle","App","state","countFeedback","event","currentTarget","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.051093e9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__3Hhjs\",\"good\":\"Statistics_good__17CKa\",\"neutral\":\"Statistics_neutral__2oRMP\",\"bad\":\"Statistics_bad__2yytn\",\"divider\":\"Statistics_divider__3YXIn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__RxnO8\",\"title\":\"Section_title__2ecka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optionsContainer\":\"FeedbackOptions_optionsContainer__1BTFo\",\"btn\":\"FeedbackOptions_btn__ToHaP\",\"good\":\"FeedbackOptions_good__3R4Gu FeedbackOptions_btn__ToHaP\",\"neutral\":\"FeedbackOptions_neutral__3elEY FeedbackOptions_btn__ToHaP\",\"bad\":\"FeedbackOptions_bad__Duv72 FeedbackOptions_btn__ToHaP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__3J8r9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PageTitle_title___o7cT\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <div className={styles.container}>\n        {title && <h2 className={styles.title}>{title}</h2>}\n        {children}\n      </div>\n    </section>\n  );\n};\n\nSection.defaultProps = {\n  title: '',\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div className={styles.statistics}>\n      <p className={styles.good}>Good: {good}</p>\n      <p className={styles.neutral}>Neutral: {neutral}</p>\n      <p className={styles.bad}>Bad: {bad}</p>\n      <div className={styles.divider}></div>\n      <p>Total: {total}</p>\n      <p>Positive feedback: {positivePercentage}%</p>\n    </div>\n  );\n};\n\nStatistics.defaultProps = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n  total: 0,\n  positivePercentage: 0,\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div className={styles.optionsContainer}>\r\n      {options.map(option => {\r\n        const label = option[0].toUpperCase() + option.slice(1);\r\n        return (\r\n          <button\r\n            key={option}\r\n            name={option}\r\n            onClick={onLeaveFeedback}\r\n            className={styles[option]}\r\n          >\r\n            {label}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Notification.module.css';\n\nconst Notification = ({ message }) => {\n  return <p className={styles.message}>{message}</p>;\n};\n\nNotification.defaultProps = {\n  message: 'Nothing to review',\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './PageTitle.module.css';\n\nconst PageTitle = ({ title }) => {\n  return <h1 className={styles.title}>{title}</h1>;\n};\n\nPageTitle.defaultProps = {\n  title: '',\n};\n\nPageTitle.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default PageTitle;\n","import React, { Component } from 'react';\nimport Section from './components/Section';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Notification from './components/Notification';\nimport PageTitle from './components/PageTitle';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countFeedback = event => {\n    const { name } = event.currentTarget;\n\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    // If we know that no new fields for feedback category will be added\n    // Or if we know that new other fields might be added, but those fields should not be included in total\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n\n    // If we expect that new fields for feedback category might be added\n    // And those fields should be included in total\n    // return Object.values(this.state).reduce((acc, value) => acc + value);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return this.countTotalFeedback()\n      ? Math.round((this.state.good / this.countTotalFeedback()) * 100)\n      : 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <>\n        <PageTitle title=\"Espresso Cafe Stats\" />\n        <Section title=\"Please leave your feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={this.countFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {total ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}